{"version":3,"sources":["shared/firebase.js","redux/modules/user.js","shared/Cookie.js","redux/modules/image.js","redux/modules/post.js","redux/configStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/Spinner.js","components/Post.js","shared/infinityScroll.js","pages/PostList.js","shared/common.js","pages/Login.js","pages/Signup.js","shared/Upload.js","pages/PostWrite.js","components/CommentList.js","components/CommentWrite.js","pages/PostDetail.js","shared/Search.js","components/Card.js","pages/Notification.js","components/Header.js","shared/Permit.js","shared/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","storage","LOG_OUT","GET_USER","SET_USER","logOut","createAction","user","setUser","handleActions","state","action","produce","draft","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","setCookie","payload","is_login","console","log","deleteCookie","actionCreators","id","pwd","user_name","dispatch","getState","history","getAuth","createUserWithEmailAndPassword","then","userCredential","updateProfile","currentUser","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","setPersistence","browserSessionPersistence","res","signInWithEmailAndPassword","onAuthStateChanged","email","signOut","replace","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","uploadImageFB","image","ref","put","snapshot","getDownloadURL","url","BRING_POST","ADD_POST","EDIT_POST","LOADING","bringPost","post_list","paging","addPost","post","editPost","post_id","loading","is_loading","initialPost","contents","comment_cnt","insert_dt","moment","format","list","unshift","index","findIndex","p","start","next","size","_paging","query","collection","orderBy","startAt","limit","get","docs","length","forEach","doc","_post","data","Object","keys","reduce","acc","cur","indexOf","user_info","pop","_user","user_id","_image","putString","docRef","addDoc","imageActions","err","window","alert","_post_idx","postDB","update","createBrowserHistory","rootReducer","combineReducers","Image","User","Post","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","is_flex","width","margin","padding","bg","children","center","_onClick","styles","Fragment","GridBox","onClick","defaultProps","styled","div","shape","src","ImageCircle","AspectOutter","AspectInner","ImageDefault","Text","bold","color","P","Input","multiLine","label","placeholder","_onChange","type","TextareaTag","rows","onChange","InputTag","textarea","input","Button","_disabled","text","bgcolor","is_float","FloatButton","ButtonTag","disabled","button","Spinner","is_dim","SpinnerWrap","SpinnerSvg","is_me","InfinityScroll","is_next","callNext","_handleScroll","_","throttle","innerHeight","body","scrollHeight","documentElement","scrollTop","handleScroll","React","useCallback","useEffect","addEventListener","removeEventListener","defafaultProps","PostList","useDispatch","useSelector","postActions","map","idx","emailCheck","test","Login","useState","setId","setPwd","e","target","userActions","Signup","pwd_check","setPwdCheck","setUserName","Upload","is_uploading","fileInput","useRef","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","PostWrite","match","params","is_edit","find","setContents","goBack","CommentList","CommentItem","CommentWrite","PostDetail","Search","setText","debounce","keyPress","Card","Notification","n","Header","_session_key","is_session","sessionStorage","getItem","Permit","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41c71c73.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCon_WShxZw5LA1eRyLttq0WO9QmUBDstA\",\n  authDomain: \"ministagram-e9e63.firebaseapp.com\",\n  projectId: \"ministagram-e9e63\",\n  storageBucket: \"ministagram-e9e63.appspot.com\",\n  messagingSenderId: \"168709879640\",\n  appId: \"1:168709879640:web:a0139290c64489a3b6572d\",\n  measurementId: \"G-3Q6Z59BWRX\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst apiKey = firebaseConfig.apiKey;\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\n\nexport {auth,apiKey,firestore,storage};  ","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport {\n  getAuth,\n  updateProfile,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  setPersistence,\n  browserSessionPersistence,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\n\n// actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\n// createAction 을 이렇게 쓰면된다\n\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n// initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n//유저객체 하나에 대한 초기값\nconst user_initial = {\n  user_name: \"haewon\",\n  user_pwd: \"1111\",\n  user_nickname: \"hae1\",\n};\n\n// 원래 action creators 방식\n// const logIn = (user) => {\n//     return {\n//         type : LOG_IN,\n//         user\n//     }\n// }\n\n//middleware actions (파이어베이스에 넣고 확인해주기)\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    const auth = getAuth();\n    setPersistence(auth, browserSessionPersistence).then((res)=>{\n      signInWithEmailAndPassword(auth, id, pwd)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(user);\n        dispatch(\n          setUser({\n            user_name: user.displayName,\n            id: id,\n            user_profile: \"\",\n            uid: user.uid,\n          })\n        );\n\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode,errorMessage);\n      });\n    }); \n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, { history }) {\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, id, pwd)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        updateProfile(auth.currentUser, {\n          displayName: user_name,\n        })\n          .then(() => {\n            dispatch(\n              setUser({\n                user_name: user_name,\n                id: id,\n                user_profile: \"\",\n                uid : user.uid, \n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n\n        console.log(errorCode, errorMessage);\n      });\n  };\n};\n\nconst loginCheckFB = () =>{\n  return function ( dispatch, getState, {history} ) {\n    auth.onAuthStateChanged((user)=> {\n      if(user){\n        dispatch(\n          setUser({\n            user_name : user.displayName,\n            user_profile : \"\",\n            id : user.email,\n            uid: user.uid,\n          })\n        );\n      }else {\n        dispatch(logOut()); \n      }\n    })\n  }\n}\n\nconst logoutFB = () => {\n  return function (dispatch, getState, { history } ){\n    auth.signOut().then(()=> {\n      dispatch(logOut());\n      history.replace('/');\n    })\n  }\n}\n\n\n\n// //auth email&pwd 확인 8버전\n// auth\n//   .createUserWithEmailAndPassword(id, pwd)\n//   .then((user) => {\n//     console.log(user);\n\n//auth update 8버전\n// auth.currentUser.updateProfile({\n//   displayName : user_name,})\n//   .then(()=> {\n//     dispatch(setUser({user_name : user_name, id : id , user_profile : \"\"}));\n//     history.push('/');\n// }).catch((error) => {\n//   console.log(error);\n// });\n\n// Reducer\n// handleActions 쓰는방식\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        //여기서 쿠키를 setCookie 해주면된다 (쿠키저장)\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// 원래 reducer 쓰던방식\n// const reducer = (state={}, action={}) => {\n//     switch (action.type){\n//         case \"LOG_IN\" : {\n//             state.user = action.user;\n//         }\n//     }\n// }\n\n//action creator export (action 생성 함수들 만든것 export 해줘야 컴포넌트에서 가져다 쓴다)\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB,\n};\n\nexport { actionCreators };\n","// 키값 기준으로 쿠키에 저장된 값을 가져오는 함수\nconst getCookie = (name) => {\n // 쿠키 값을 가져옵니다.\n    let value = \"; \"+ document.cookie\n// 키 값을 기준으로 파싱합니다.\n    let parts = value.split(`; ${name}=`);\n// value를 return! 왜 2랑 같아야 하냐면 parts에서 우리 원하는 value값이 없으면 스플릿해도 2개로 나눠지지 않기떄문에 2일때만 값을 가져와라 하는것임.   \n// pop 제일 뒤에놈만 가져와라 shift 제일 앞에놈만 가져와라\n    if (parts.length===2){\n        return parts.pop().split(\";\").shift();\n    }\n};\n// 쿠키에 저장하는 함수\nconst setCookie = (name,value,exp = 5) => {\n    // 날짜를 만들어줍니다.\n    let date = new Date();\n    date.setTime(date.getTime() + exp * 24 * 1000 * 60 * 60 );\n    // 저장!\n    document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n};\n// 만료일을 예전으로 설정해 쿠키를 지웁니다.\nconst deleteCookie = (name) => {\n    let date = new Date(\"2020-01-01\").toUTCString();\n    console.log(date);\n\n    document.cookie = name + \"=; expires=\" + date;\n};\n\nexport {getCookie,setCookie,deleteCookie};\n\n\n    // //전체쿠키 가지고 오기\n    // let cookies = document.cookie;\n    // //쿠키 세미콜론 사용해서 문자열 쪼개주기(파싱하기)\n    // cookies.split(\";\");\n    \n    // let date = new Date();\n    \n    \n    // //만료시간 (3일뒤)\n    // expires= date.setTime(date.getTime() + 86400000);\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nimport { storage } from \"../../shared/firebase\";\n\n//action type\n\nconst UPLOADING = \"UPLOADING\";\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nconst SET_PREVIEW = \"SET_PREVIEW\";\n\n//action creators\n\nconst uploading = createAction(UPLOADING , (uploading) => ({ uploading }));\nconst uploadImage = createAction(UPLOAD_IMAGE , (image_url) => ({ image_url }));\nconst setPreview = createAction(SET_PREVIEW , (preview)=> ({ preview }));\n\n//initialState\nconst initialState = {\n  image_url: '',\n  uploading: false,\n  preview : null,\n};\n\n//firebase에다가 이미지(파일객체) 받아와서 업로드 할거야\nconst uploadImageFB = (image) => {\n  return function (dispatch, getState, { history }) {\n\n    dispatch(uploading(true));\n\n    console.log(`images/${new Date().getTime()}_${image.name}`);\n    const _upload = storage.ref(`images/${image.name}`).put(image);\n\n    //업로드 \n    _upload.then((snapshot) => {\n        console.log(snapshot);\n\n        snapshot.ref.getDownloadURL().then((url) => {\n          dispatch(uploadImage(url));\n          console.log(url);\n        });\n      });\n  };\n}\n\n//reducer\nexport default handleActions({\n    //이미지 url 고치기\n    [UPLOAD_IMAGE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.image_url = action.payload.image_url;\n        draft.uploading = false;\n      }),\n\n    [UPLOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.uploading = action.payload.uploading;\n      }),\n    \n    [SET_PREVIEW] : (state,action) => produce (state,(draft)=>{\n        draft.preview = action.payload.preview;\n    }),\n  }, initialState);\n\nconst actionCreators = {\n  uploadImage,\n  uploadImageFB,\n  setPreview,\n};\n\nexport { actionCreators };\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, storage } from \"../../shared/firebase\";\nimport { collection, getDocs, addDoc , doc, docs } from \"firebase/firestore\";\nimport moment from \"moment\";\n\nimport { actionCreators as imageActions } from \"./image\";\n\n//액션타입;목록 가지고온걸 리덕스에 넣어주는애, 리덕스 데이트에 뭔가를 하나 더 추가해주는애\nconst BRING_POST = \"BRING_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst EDIT_POST = \"EDIT_POST\";\nconst LOADING = \"LOADING\";\n\n//action creator\nconst bringPost = createAction(BRING_POST, (post_list,paging) => ({ post_list ,paging }));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\n  post_id,\n  post,\n}));\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: [],\n  paging: { start: null, next: null, size: 3 },\n  is_loading: false,\n};\n\nconst initialPost = {\n  // id: 0,\n  // user_info: {\n  //   user_name: \"hae1\",\n  //   user_profile:\n  //     \"https://s3.ap-northeast-2.amazonaws.com/picapipicca.shop/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A5%E1%86%A8%E1%84%92%E1%85%A7%E1%86%BC%E1%84%82%E1%85%B5%E1%86%B7.jpeg\",\n  // },\n  image_url:\n    \"https://s3.ap-northeast-2.amazonaws.com/picapipicca.shop/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A5%E1%86%A8%E1%84%92%E1%85%A7%E1%86%BC%E1%84%82%E1%85%B5%E1%86%B7.jpeg\",\n  contents: \"\",\n  comment_cnt: 0,\n  insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n};\n\n//middleware actions\nconst editPostFB = (post_id = null, post = {}) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      console.log(\"게시글 정보가 없어요!\");\n      return;\n    }\n\n    const _image = getState().image.preview;\n\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\n    const _post = getState().post.list[_post_idx];\n\n    console.log(_post);\n\n    const postDB = firestore.collection(\"post\");\n\n    if (_image === _post.image_url) {\n      postDB\n        .doc(post_id)\n        .update(post)\n        .then((doc) => {\n          dispatch(editPost(post_id, { ...post }));\n          history.replace(\"/\");\n        });\n\n      return;\n    } else {\n      const user_id = getState().user.user.uid;\n      const _upload = storage\n        .ref(`images/${user_id}_${new Date().getTime()}`)\n        .putString(_image, \"data_url\");\n\n      _upload.then((snapshot) => {\n        snapshot.ref\n          .getDownloadURL()\n          .then((url) => {\n            console.log(url);\n\n            return url;\n          })\n          .then((url) => {\n            postDB\n              .doc(post_id)\n              .update({ ...post, image_url: url })\n              .then((doc) => {\n                dispatch(editPost(post_id, { ...post, image_url: url }));\n                history.replace(\"/\");\n              });\n          })\n          .catch((err) => {\n            window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n            console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n          });\n      });\n    }\n  };\n};\n\nconst addPostFB = (contents = \"\") => {\n  return function (dispatch, getState, { history }) {\n    const _user = getState().user.user;\n\n    const user_info = {\n      user_name: _user.user_name,\n      user_id: _user.uid,\n      user_profile: _user.user_profile,\n    };\n\n    const _post = {\n      ...initialPost,\n      contents: contents,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n    };\n\n    const _image = getState().image.preview;\n\n    console.log(_image);\n\n    const _upload = storage\n      .ref(`images/${user_info.user_id}_${new Date().getTime()}`)\n      .putString(_image, \"data_url\");\n\n    _upload\n      .then((snapshot) => {\n        snapshot.ref\n          .getDownloadURL()\n          .then((url) => {\n            console.log(url);\n\n            return url;\n          })\n          .then((url) => {\n            const docRef = addDoc(collection(firestore, \"post\"), {\n              ...user_info,\n              ..._post,\n              image_url: url,\n            });\n            let post = { user_info, ..._post, id: docRef.id, image_url: url };\n\n            dispatch(addPost(post));\n            history.replace(\"/\");\n\n            dispatch(imageActions.setPreview(null));\n          })\n          .catch((err) => {\n            window.alert(\"앗! 게시글 작성에 문제가 있어요!\");\n            console.log(\"게시글 작성에 실패했어요!\", err);\n          });\n      })\n      .catch((err) => {\n        window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n        console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n      });\n  };\n};\n\nconst getPostFB = (start = null, size = 3) => {\n  return function (dispatch, getState, { history }) {\n\n    let _paging = getState().post.paging;\n    if(_paging.start && !_paging.next) {\n      return;\n    }\n    dispatch(loading(true));\n    \n    const postDB = firestore.collection(\"post\");\n\n    let query = postDB.orderBy(\"insert_dt\", \"desc\");\n\n    // 시작점 정보가 있으면? 시작점부터 가져오도록 쿼리 수정!\n    if(start){\n      query = query.startAt(start);\n    }\n\n    // 사이즈보다 1개 더 크게 가져옵시다. \n    // 3개씩 끊어서 보여준다고 할 때, 4개를 가져올 수 있으면? 앗 다음 페이지가 있겠네하고 알 수 있으니까요.\n    // 만약 4개 미만이라면? 다음 페이지는 없겠죠! :)\n    query.limit(size+1).get().then((docs) => {\n      let post_list = [];\n\n      // 새롭게 페이징 정보를 만들어줘요.\n      // 시작점에는 새로 가져온 정보의 시작점을 넣고,\n      // next에는 마지막 항목을 넣습니다.\n      // (이 next가 다음번 리스트 호출 때 start 파라미터로 넘어올거예요.)\n      let paging = {\n        start: docs.docs[0],\n        next: docs.docs.length === size+1? docs.docs[docs.docs.length - 1] : null,\n        size: size,\n      };\n\n      docs.forEach((doc) => {\n        let _post = doc.data();\n\n        let post = Object.keys(_post).reduce(\n          (acc, cur) => {\n            if (cur.indexOf(\"user_\") !== -1) {\n              return {\n                ...acc,\n                user_info: { ...acc.user_info, [cur]: _post[cur] },\n              };\n            }\n            return { ...acc, [cur]: _post[cur] };\n          },\n          { id: doc.id, user_info: {} }\n        );\n\n        post_list.push(post);\n      });\n\n      // 마지막 하나는 빼줍니다.\n      // 그래야 size대로 리스트가 추가되니까요!\n      // 마지막 데이터는 다음 페이지의 유무를 알려주기 위한 친구일 뿐! 리스트에 들어가지 않아요!\n      post_list.pop();\n\n      dispatch(bringPost(post_list, paging));\n    });\n  };\n};\n\n//reducer (handleActions)\nexport default handleActions(\n  {\n    [BRING_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(...action.payload.post_list);\n        draft.paging = action.payload.paging;\n        draft.is_loading = false;\n      }),\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.unshift(action.payload.post);\n      }),\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        let index = draft.list.findIndex(\n          (p) => p.id === action.payload.post_id\n        );\n\n        draft.list[index] = { ...draft.list[index], ...action.payload.post };\n      }),\n    [LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n  },\n  initialState\n);\n\n//action creator export\nconst actionCreators = {\n  bringPost,\n  addPost,\n  editPost,\n  getPostFB,\n  addPostFB,\n  editPostFB,\n};\n\nexport { actionCreators };\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport User from \"./modules/user\";\nimport Post from \"./modules/post\";\nimport Image from \"./modules/image\";\n\n//history 객체 만들기\nexport const history = createBrowserHistory();\n\n//root reducer 만들기 ( 라우터와 히스토리 연결시켜주기 -> 그럼 이제 스토어에 브라우저 히스토리가 다 저장된다)\nconst rootReducer = combineReducers({\n  image : Image,\n  user: User,\n  post: Post,\n  router: connectRouter(history),\n});\n\n//미들웨어 준비\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\n//크롬 확장 프로그램, redux devTools도 사용 설정하기\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\n    //미들웨어 묶기 ( composeEnhancer 사용해서 (applymiddleware로 지금까지 있었던 모든미들웨어들을 사용한다고 설정해주고) 묶어준다)\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n    //미들웨어하고 루트 리듀서를 엮어서 스토어를 만든다!\n    let store = (initialStore) => createStore(rootReducer, enhancer);\n\n    export default store();\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n    const {is_flex,width,margin,padding,bg,children,center, _onClick} = props; \n\n    const styles = {\n        is_flex : is_flex,\n        margin: margin,\n        width: width,\n        padding: padding,\n        bg: bg,\n        center:center,\n    };\n\n    return (\n        <React.Fragment>\n            <GridBox {...styles} onClick={_onClick}>\n                {children}\n            </GridBox>\n        </React.Fragment>\n    );\n}\n\nGrid.defaultProps = {\n    children : null,\n    is_flex : false,\n    width : \"100%\",\n    padding : false,\n    margin: false,\n    bg: false,\n    center : false,\n    _onClick: () => {}\n};\n\nconst GridBox = styled.div`\n    width : ${(props)=>props.width};\n    height: 100%;\n    box-sizing: border-box;\n    ${(props) => (props.padding? `padding : ${props.padding};` : \"\") }\n    ${(props) => (props.margin? `margin : ${props.margin};` : \"\" )}\n    ${(props) => (props.bg? `background-color: ${props.bg};` : \"\") }\n    ${(props) => props.is_flex\n        ? `display: flex; align-items: center; justify-content: space-between;` \n        : \"\" }\n    ${(props) => props.center ? `text-align : center;`: \"\"}\n`;\n\nexport default Grid;","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Image = (props) => {\n\n    const {shape,src,size} = props;\n    \n    const styles = {\n        src : src,\n        size : size,\n    }\n    if(shape === \"circle\" ){\n        return (\n            <ImageCircle {...styles}></ImageCircle>\n        )\n    }\n    if (shape === \"rectangle\") {\n        return (\n            <AspectOutter>\n                <AspectInner {...styles}></AspectInner>\n            </AspectOutter>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <ImageDefault {...styles}></ImageDefault>\n        </React.Fragment>\n    );\n}\n\nImage.defaultProps = {\n    shape : \"circle\",\n    src: \"https://s3.ap-northeast-2.amazonaws.com/picapipicca.shop/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A5%E1%86%A8%E1%84%92%E1%85%A7%E1%86%BC%E1%84%82%E1%85%B5%E1%86%B7.jpeg\",\n    size : 36,\n};\nconst ImageDefault = styled.div`\n      --size : ${(props)=> props.size}px;\n    width : var(--size);\n    height : var(--size);\n    background-image: url(\"${(props)=> props.src}\");\n    background-size: cover;\n`;\n\nconst AspectOutter =styled.div`\n    width: 100%;\n    min-width: 250px;\n`;\n\nconst AspectInner =styled.div`\n    position: relative;\n    padding-top: 75%;\n    overflow: hidden;\n    background-image: url(\"${(props)=> props.src}\");\n    background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n    --size : ${(props)=> props.size}px;\n    width : var(--size);\n    height : var(--size);\n    border-radius: var(--size);\n\n    background-image: url(\"${(props)=> props.src}\");\n    background-size: cover;\n    margin: 4px;\n`;\n\nexport default Image;","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Text = (props) => {\n\n    const {bold, color, size, children, margin} = props;\n    const styles = {bold:bold, color: color, size: size, margin};\n\n    return(\n       <P {...styles}>\n           {children}\n       </P>\n    )\n}\n\nText.defaultProps = {\n    children: null,\n    bold: false,\n    color : \"#222831\",\n    size : \"14px\",\n    margin : false,\n};\n\nconst P = styled.p`\n    color : ${(props) => props.color};\n    font-size : ${(props) => props.size};\n    font-weight: ${(props) => props.bold? \"600\" : \"400\"};\n    ${(props)=> props.margin? `margin : ${props.margin}`: \"\" };\n`;\nexport default Text;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Text, Grid } from \"../elements\";\n\nconst Input = (props) => {\n  const { multiLine, label, placeholder, _onChange, type , value} = props;\n\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>} \n        <TextareaTag\n          rows = {8}\n          value={value}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></TextareaTag>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <InputTag type={type} placeholder={placeholder} onChange={_onChange} />\n      </Grid>\n    </React.Fragment>\n  );\n};\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value :\"\",\n  _onChange: () => {},\n};\nconst TextareaTag = styled.textarea`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nconst InputTag = styled.input`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = (props) => {\n  const { _disabled, text, _onClick, color, bgcolor, is_float, children, margin, width, padding } =\n    props;\n\n  if (is_float) {\n    return (\n      <React.Fragment>\n        <FloatButton onClick={_onClick}> {text ? text : children} </FloatButton>\n      </React.Fragment>\n    );\n  }\n  const styles = {\n    color: color,\n    bgcolor: bgcolor,\n    margin: margin,\n    width: width,\n    padding: padding,\n  };\n  \n  return (\n    <React.Fragment>\n      <ButtonTag {...styles} disabled = {_disabled} onClick={_onClick}>\n        {text ? text : children}\n      </ButtonTag>\n    </React.Fragment>\n  );\n};\n\nButton.defaultProps = {\n  color: \"#212121\",\n  bgcolor: false,\n  text: false,\n  _onClick: () => {},\n  is_float: false,\n  children: null,\n  margin: false,\n  width: \"100%\",\n  padding : \"12px 0px;\",\n  _disabled:false,\n};\n\nconst ButtonTag = styled.button`\n  width: ${ (props) => props.width};\n  ${(props)=> (props.margin? `margin : ${props.margin};`: \"\")};\n  background-color: ${((props)=>props.disabled? \"#cad4c9\":\"#d9edd8\")};\n  ${(props) => (props.bgcolor ? `background-color : ${props.bgcolor};` : \"\")};\n  color: ${(props) => props.color};\n  padding: ${(props) => props.padding};\n  box-sizing: border-box;\n  border: none;\n`;\n\nconst FloatButton = styled.button`\n  width: 50px;\n  height: 50px;\n  background-color: ${((props)=>props.disabled? \"#cad4c9\":\"#d9edd8\")};\n  color: #212121;\n  box-sizing: border-box;\n  font-size: 36px;\n  font-weight: 800;\n  position: fixed;\n  bottom: 50px;\n  right: 16px;\n  text-align: center;\n  border: none;\n  border-radius: 50px;\n  vertical-align: middle;\n`;\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Spinner = (props) => {\n  const { type, size, is_dim } = props;\n\n  return (\n    <React.Fragment>\n      <SpinnerWrap type={type} is_dim={is_dim}>\n        <SpinnerSvg size={size} />\n      </SpinnerWrap>\n    </React.Fragment>\n  );\n};\n\nSpinner.defaultProps = {\n  type: \"inline\", // inline, page\n  is_dim: false,\n  size: 60,\n};\n\nconst SpinnerWrap = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n  ${(props) =>\n    props.type === \"page\"\n      ? `position: fixed;\n        height: 95vh;\n        top: 0;\n        left: 0;\n        padding: 0;\n        zIndex: 9999;`\n      : ``}\n  ${(props) =>\n    props.is_dim\n      ? `\n     background: rgba(0,0,0,0.4); \n     height: 100vh;\n  `\n      : ``}\n`;\n\nconst SpinnerSvg = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='margin: auto; background: none; display: block; shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cg transform='rotate(0 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.9166666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(30 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.8333333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(60 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.75s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(90 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.6666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(120 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5833333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(150 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(180 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.4166666666666667s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(210 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.3333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(240 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.25s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(270 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.16666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(300 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.08333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(330 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='0s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n  background-size: var(--size);\n`;\n\nexport default Spinner;","import React from \"react\";\nimport { Grid, Text, Image, Button } from \"../elements\";\nimport {history} from \"../redux/configStore\";\n\nconst Post = (props) => {\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid is_flex padding=\"16px\">\n          <Grid is_flex width=\"auto\">\n            <Image shape=\"circle\" src={props.src} />\n            <Text bold>{props.user_info.user_name}</Text>\n          </Grid>\n          <Grid is_flex width=\"auto\">\n            <Text>{props.insert_dt}</Text>\n            {props.is_me && (\n              <Button width=\"auto\" margin=\"4px\" padding=\"4px\" _onClick ={()=> {\n                  history.push(`/write/${props.id}`);\n              }}>\n                수정\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n        <Grid padding=\"16px\">\n          <Text> {props.contents} </Text>\n        </Grid>\n        <Grid>\n          <Image shape=\"rectangle\" src={props.image_url} />\n        </Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" bold>\n            댓글{props.comment_cnt}개\n          </Text>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n// 프롭스가 없을떄를 대비한 기본 프롭스를 주는것 (프롭스값이 안와서 화면이 깨지는 일은 없으나 잘못된 프롭스값이 온다면 방어하기어렵다.)\nPost.defaultProps = {\n  user_info: {\n    user_name: \"hae1\",\n    user_profile:\n      \"https://s3.ap-northeast-2.amazonaws.com/picapipicca.shop/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A5%E1%86%A8%E1%84%92%E1%85%A7%E1%86%BC%E1%84%82%E1%85%B5%E1%86%B7.jpeg\",\n  },\n  image_url:\n    \"https://s3.ap-northeast-2.amazonaws.com/picapipicca.shop/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A5%E1%86%A8%E1%84%92%E1%85%A7%E1%86%BC%E1%84%82%E1%85%B5%E1%86%B7.jpeg\",\n  contents: \"자 가보자!\",\n  comment_cnt: 10,\n  insert_dt: \"2021-11-29 21:00:00\",\n  is_me: false,\n};\n\nexport default Post;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { Spinner } from \"../elements\";\n\nconst InfinityScroll = (props) => {\n  const { children, is_next, callNext, loading } = props;\n\n  const _handleScroll = _.throttle(() => {\n    if (loading) {\n      return;\n    }\n\n    const { innerHeight } = window;\n    const { scrollHeight } = document.body;\n\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 200) {\n      callNext();\n    }\n  }, 300);\n\n  const handleScroll = React.useCallback(_handleScroll, [loading]);\n\n  React.useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    if (is_next) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n    window.addEventListener(\"scroll\", () => {});\n\n    return () => window.removeEventListener(\"scroll\", () => {});\n  }, [is_next, loading]);\n\n  return (\n    <React.Fragment>\n        {props.children}\n        {is_next && <Spinner/>}\n    </React.Fragment>\n  );\n};\n\nInfinityScroll.defafaultProps = {\n  children: null,\n  is_next: false,\n  callNext: () => {},\n  loading: false,\n};\n\nexport default InfinityScroll;\n","// PostList.js\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"../elements\";\nimport Post from \"../components/Post\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/infinityScroll\";\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  const user_info = useSelector((state) => state.user.user);\n  const is_loading = useSelector((state) => state.post.is_loading);\n  const paging = useSelector((state) => state.post.paging);\n\n  const {history} = props;\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid bg = {\"#EFF6FF\"} padding = \"20px 0px\">\n        <InfinityScroll\n          callNext = {()=> {\n            dispatch(postActions.getPostFB(paging.next));\n          }} \n          is_next ={paging.next? true : false}\n          loading = {is_loading}\n        >\n          {post_list.map((p, idx) => {\n            if (p.user_info.user_id === user_info?.uid) {\n              return (\n                  <Grid bg =\"#ffffff\" margin=\"10px 0px\" key={p.id + \"post_list\"} _onClick ={()=> {history.push(`/post/${p.id}`);}}> \n                    <Post  key={p.id + \"post_list\"} {...p} is_me />\n                  </Grid>\n              );\n            } else {\n              return (\n                <Grid _onClick = {()=> {history.push(`/post/${p.id}`);}} key={p.id + \"post_list\"}>\n                  <Post  {...p} />\n                </Grid>\n              );\n            }\n          })}\n        </InfinityScroll>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n","import { common } from \"@material-ui/core/colors\";\n\nexport const emailCheck = (email) => {\n    //aa_-.123Aaa@aa.com\n\n let regEmail =  /^[0-9a-zA-Z]([-_.0-9a-zA-Z])*@[0-9a-zA-Z]([-_.0-9a-zA-Z])*.([a-zA-Z])*/;\n    \n return regEmail.test(email);\n }\n\n \n \n ","import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport {getCookie,setCookie,deleteCookie} from \"../shared/Cookie\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from '../shared/common';\n\nconst Login = (props) => {\n\n  const dispatch = useDispatch(); \n\n  const [id,setId] = React.useState(\"\");\n  const [pwd,setPwd] = React.useState(\"\");\n\n  const login = () => {\n\n    console.log(id);\n\n    if(id ===\"\" || pwd === \"\" ){\n      window.alert(\"아이디 혹은 비밀번호가 비어있습니다! 입력해주세요! :)\");\n      return;\n    }\n    if(!emailCheck(id)){\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n    dispatch(userActions.loginFB(id,pwd)); \n  };  \n \n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          로그인\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"패스워드\"\n            placeholder=\"패스워드를 입력해주세요\"\n            type=\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid>\n          <Button\n            text=\"로그인하기\"\n            _onClick={() => {\n              console.log(\"로그인했어\");\n              login();\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/common\";\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n  const [pwd_check, setPwdCheck] = React.useState(\"\"); \n  const [user_name, setUserName] = React.useState(\"\");\n  \n\n  const signup = () => {\n\n    if(id === \"\" || pwd === \"\" || user_name === \"\" ){\n      window.alert(\"아이디, 비밀번호, 닉네임을 모두 입력해주세요! :)\");\n      return;\n    }\n    if(!emailCheck(id)){\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n    \n    if(pwd !== pwd_check){\n      window.alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다!\");\n      return;\n    }\n    \n    dispatch(userActions.signupFB(id,pwd,user_name));\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          회원가입\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"닉네임\"\n            placeholder=\"닉네임을 입력하세요\"\n            _onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"비밀번호\"\n            placeholder=\"비밀번호를 입력하세요\"\n            type =\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"비밀번호 확인\"\n            placeholder=\"비밀번호를 다시 입력하세요\"\n            type =\"password\"\n            _onChange={(e) => {\n              setPwdCheck(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid>\n          <Button\n          _disabled ={id === \"\" || pwd === \"\" || user_name === \"\" || pwd_check === \"\" ? true : false}\n            text=\"회원가입하기\"\n            _onClick={() => {\n              signup();\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nSignup.defaultProps = {};\n\nexport default Signup;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../elements\";\n\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n  const dispatch = useDispatch();\n  const is_uploading = useSelector((state) => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = (e) => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.files[0]);\n\n    console.log(fileInput.current.files[0]);\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n        console.log(reader.result);\n        dispatch(imageActions.setPreview(reader.result));\n    };\n  };\n\n  const uploadFB = () => {\n    if (!fileInput.current || fileInput.current.files.length === 0) {\n      window.alert(\"파일을 선택해주세요!\");\n      return;\n    }\n    let image = fileInput.current.files[0];\n    dispatch(imageActions.uploadImageFB(image));\n  };\n\n  return (\n    <React.Fragment>\n      <input\n        type=\"file\"\n        onChange={selectFile}\n        ref={fileInput}\n        disabled={is_uploading}\n      />\n      <Button _onClick={uploadFB}>업로드하기</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Upload;\n","import React from \"react\";\nimport { Grid, Button, Input, Image, Text } from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n\n  const { history } = props;\n\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      history.goBack();\n\n      return;\n    }\n\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n    }\n  }, []);\n\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents));\n  };\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id,{contents : contents}));\n  }\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗 잠깐!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          {\" \"}\n          로그인하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text margin=\"0px\" size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n      </Grid>\n\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            미리보기\n          </Text>\n        </Grid>\n        <Image\n          shape=\"rectangle\"\n          src={\n            preview\n              ? preview\n              : \"https://yoloiscute.s3.ap-northeast-2.amazonaws.com/IMG_4571+2.jpg\"\n          }\n        />\n      </Grid>\n      <Grid padding=\"16px\">\n        <Input\n          value={contents}\n          _onChange={changeContents}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n        />\n      </Grid>\n      <Grid padding=\"16px\">\n        {is_edit ? (\n          <Button _onClick={editPost} text=\"게시글 수정\"></Button>\n        ) : (\n          <Button _onClick={addPost} text=\"게시글 작성\"></Button>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n","import React from \"react\";\nimport {Grid,Image,Text,Button} from \"../elements\";\n\n\n\n\nconst CommentList = () => {\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n       <CommentItem/>\n       <CommentItem/>\n       <CommentItem/>\n       <CommentItem/>\n       <CommentItem/>\n       <CommentItem/> \n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommentList;\n\nconst CommentItem =  (props) => {\n\n    const {user_profile,user_name,user_id,insert_dt,post_id,contents} = props;\n\n    return(\n            <Grid is_flex>\n                <Grid is_flex width = \"auto\">\n                    <Image shape =\"circle\" />\n                    <Text bold>{user_name}</Text >\n                </Grid>\n                <Grid is_flex margin= \"0px 4px\">\n                    <Text margin=\"0px 3px\">{contents}</Text>\n                    <Text margin=\"0px\">{insert_dt}</Text>\n                </Grid>\n            </Grid>\n        \n    )\n}\n\nCommentItem.defaultProps ={\n    //유저정보,게시물정보(어떤게시물에 달려있는 코멘트다),코멘트 자체의 내용, 작성시간  있어야함\n    user_profile : \"\",\n    user_name : \"hae1\",\n    user_id :\"\",\n    post_id : 1,\n    contents : \"귀여운 마블리네요!\", \n    insert_dt: \"2021-12-02 08:00:00\",\n}","import React from \"react\";\nimport {Grid,Input, Button} from \"../elements\";\n\n\n\n\nconst CommentWrite = () => {\n\n    return(\n        <React.Fragment>\n            <Grid padding =\"16px\" is_flex >\n                <Input placeholder=\"댓글 내용을 입력해주세요 :)\" />\n                <Button width =\"50px\" margin=\"0px 2px 0px 8px\" >작성</Button>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default CommentWrite;","import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nconst PostDetail = (props) => {\n\n    return(\n        <React.Fragment>\n            <Post/>\n            <CommentWrite/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default PostDetail;","import React from \"react\";\nimport _ from \"lodash\";\n\nconst Search = () => {\n\n const [text,setText] = React.useState(\"\"); \n \n const debounce = _.debounce((e) => {\n    console.log(\"debounce :::\", e.target.value);\n  }, 1000);\n\n  const throttle =_.throttle ((e)=> {\n      console.log(\"throttle :::\", e.target.value);\n  }, 1000);\n const keyPress = React.useCallback(debounce,[]);\n\n  const onChange = (e) => {\n    setText(e.target.value);\n    keyPress(e);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" onChange={onChange} value = {text} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport {Grid,Image,Text} from \"../elements\";\n\nconst Card = (props) => {\n    const {image_url , user_name, post_id} =props;\n    \n\n\n    return (\n        <Grid padding =\"16px\" is_flex bg =\"#ffffff\" margin=\"8px 0px\">\n                            <Grid width =\"auto\" margin =\"0px 8px 0px 0px\">\n                                <Image shape =\"square\" size ={75} image_url={image_url}/>\n                            </Grid>\n                            <Grid>\n                                <Text>\n                                    <b>{user_name}</b> 이 게시물에 댓글을 남겼습니다.\n                                </Text>\n                            </Grid>\n                        </Grid>\n    );\n}\nCard.defaultProps = {\n    image_url:\"\",\n    user_name : \"\",\n    post_id : null,\n}\n\nexport default Card;","import React from \"react\";\nimport {Grid, Text, Image} from \"../elements\";\nimport Card from \"../components/Card\";\n\nconst Notification = (props) => {\n    let noti = [\n        { user_name: \"hae1\" , post_id: \"post1\", image_url: \"\" },\n        { user_name: \"hae1\" , post_id: \"post2\", image_url: \"\" },\n        { user_name: \"hae1\" , post_id: \"post3\", image_url: \"\" },\n        { user_name: \"hae1\" , post_id: \"post4\", image_url: \"\" },\n        { user_name: \"hae1\" , post_id: \"post5\", image_url: \"\" },\n    ];\n\n    return (\n        <React.Fragment>\n            <Grid padding =\"16px\" bg = \"#c4d9c3\">\n                {noti.map((n)=> {\n                    return(\n                        <Card key={n.post_id} {...n}/>\n                    )\n                })}\n            </Grid>\n        </React.Fragment>\n    );\n}\n \nexport default Notification;\n","import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport {history} from \"../redux/configStore\"; \nimport { apiKey } from \"../shared/firebase\";\n\nconst Header = (props) => {\n  //쿠키가 있다 없다(로그인을 했다 하지않았다) 유무를 state에 넣어준다\n  //is_login : state 값, setIsLogin : is_login의 state값을 수정하는 함수, useState(초기값)\n  //useState(false)  -> false 인것은 \"처음에는 로그인안함\" 이라고 주는것.\n  // const [is_login,setIsLogin] = React.useState(false);\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  \n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  \n  const is_session = sessionStorage.getItem(_session_key)? true : false;  \n\n  //useEffect 훅 사용해서 is_login을 쿠키를 확인해서 true,false 하는 애를 만듦\n  // React.useEffect(()=>{\n  //     let cookie = getCookie(\"user_id\");\n  //     console.log(cookie);\n\n  //     if(cookie){\n  //         setIsLogin(true);\n  //     }else{\n  //         setIsLogin(false);\n  //     }\n  // });\n\n  console.log(is_session);\n\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid is_flex padding=\"4px 16px\">\n          <Grid>\n            <Text size=\"24px\" bold margin=\"0px\">\n              Ministagram\n            </Text>\n          </Grid>\n          <Grid is_flex>\n            <Button bgcolor=\"#b2cef7\" color=\"#212121\" text=\"내정보\"></Button>\n            <Button _onClick = {() => {\n              history.push('/noti');\n            }} bgcolor=\"#8dafe0\" color=\"#212121\" text=\"알림\"></Button>\n            <Button\n              bgcolor=\"#6f98b0\"\n              color=\"#212121\"\n              text=\"로그아웃\"\n              _onClick={() => {\n                dispatch(userActions.logoutFB());\n              }}\n            ></Button>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid is_flex padding=\"4px 16px\">\n        <Grid>\n          <Text size=\"24px\" bold margin=\"0px\" margin=\"0px\">\n            Ministagram\n          </Text>\n        </Grid>\n        <Grid is_flex>\n          <Button bgcolor=\"#b2cef7\" color=\"#212121\" text=\"로그인\" _onClick= {()=> {\n            history.push('/login');\n          }}></Button>\n          <Button bgcolor=\"#8dafe0\" color=\"#212121\" text=\"회원가입\" _onClick= {()=> {\n            history.push('/signup');}}></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nHeader.defaultProps = {}\n\nexport default Header;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\n\nconst Permit = (props) => {\n    const is_login = useSelector(state => state.user.is_login);\n    \n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  \n    const is_session = sessionStorage.getItem(_session_key)? true : false;  \n    if (is_session && is_login) {\n        return(\n            <React.Fragment>\n                {props.children}\n            </React.Fragment>\n        );\n    }\n    return null;\n};\n\nexport default Permit;","import './App.css';\nimport React from 'react';\n\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from '../redux/configStore';\n\nimport PostList from '../pages/PostList';\nimport Login from '../pages/Login';\nimport Signup from '../pages/Signup';\nimport PostWrite from '../pages/PostWrite';\nimport PostDetail from \"../pages/PostDetail\";\nimport Search from './Search';\nimport Notification from '../pages/Notification';\n\nimport Header from '../components/Header';\nimport {Button, Grid} from \"../elements\"\nimport Permit from './Permit';\n\nimport { useDispatch } from 'react-redux';\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport {apiKey} from \"./firebase\";\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  \n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key)? true : false;  \n\n  React.useEffect(()=> {\n    if(_session_key){\n       dispatch(userActions.loginCheckFB());\n    }\n  },[]);\n\n  return (\n    <React.Fragment>\n     <Grid>\n      <Header></Header>\n      <ConnectedRouter history={history} >\n        <Route path = \"/\" exact component={PostList} />\n        <Route path = \"/login\" exact component={Login}/>\n        <Route path = \"/signup\" exact component= {Signup}/>\n        <Route path = \"/write\" exact component= {PostWrite}/>\n        <Route path = \"/write/:id\" exact component= {PostWrite}/>\n        <Route path = \"/post/:id\" exact component = {PostDetail} />\n        <Route path = \"/search\" exact component = {Search}/>\n        <Route path = \"/noti\" exact component ={Notification}/>\n      </ConnectedRouter>\n     </Grid>\n     <Permit>\n       <Button is_float text= \"+\" _onClick = {() => {history.push(\"/write\");}}></Button>\n     </Permit>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shared/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\nimport store from \"./redux/configStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}